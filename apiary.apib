FORMAT: 1A
HOST: https://api.ngabarin.id/

# Ngabarin Consumer API

Dokumen ini digunakan untuk mengintegrasikan layanan ngabarin dengan website atau 
aplikasi anda menggunakan REST API. Untuk mendapatkan data secara real time, bisa
menggunakan koneksi websocket atau webhook.

Gunakan Ngabarin API Token pada setiap request.

# Format Respon:

Semua parameter dan key pada Request maupun Response menggunakan bahasa inggris dengan format snake case (huruf kecil yang dipisahkan dengan underscore).

Sukses 200
```
{
    "id":1,
    "username": "tegarimansyah"
}
```

Gagal 400, 401, 403, 404
```
{
    "result_code":1,
    "error_msg": "Registration Error",
    "error_desc": "Registration error, username or email already used",
    "error_info":  "http://docs.ngabarin.id/registration"
}
```

| HTTP Code | Status | Meaning |
|:---------:|--------------|:-----------------------------------------:|
| 200 | OK | Request execute successfully |
| 201 | Created | Request write on db successfully |
| 400 | Bad Request | Invalid format, check docs |
| 401 | Unauthorized | Use Authorization header or correct token |
| 403 | Forbidden | The path is not belong to you |
| 404 | Not Found | The path is not available |

# Group Konektivitas Cloud

## PING  [/ping]

### PING [GET /ping]

+ Request (application/json)

    + Headers
    
            NGABARIN-TOKEN: NGABARIN-USER-TOKEN
            
+ Response 200 (application/json)

        {
            "response": "OK"
        }
        
+ Response 403 (application/json)

        {
            "result_code":1,
            "error_msg": "Unauthorized",
            "error_desc": "Unauthorized data request",
            "error_info":  "https://ngabarin.docs.apiary.io/#reference/login-dan-logout"
        }
        
# Group Login dan Logout

## Login [/login]

### Login [POST /login]

+ Request (application/json)
    Untuk mendapatkan token. Token digunakan untuk melakukan pemanggilan API lainnya.

    + Body

            {
                "username":"your_username",
                "password":"password"
            }

+ Response 200 (application/json)

        {
            "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg",
            "token_expire": "2019-07-01T14:54:54-04:00",
            "token_expire_unix": 1562007294000,
            "status":"Logged In"
        }

+ Response 403 (application/json)

        {
            "result_code":1,
            "error_msg": "Login Error",
            "error_desc": "Login error, check your username or password",
            "error_info":  "http://docs.ngabarin.id/login"
        }

### Refresh Token [GET /login/refresh]

+ Request (application/json)
    Untuk mendapatkan token sebelum expire. Token digunakan untuk melakukan pemanggilan API lainnya.

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Response 200 (application/json)

        {
            "token":"Exa123ddWeXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg",
            "token_expire": "2019-07-01T14:54:54-04:00",
            "token_expire_unix": 1562007294000,
            "status":"New Token"
        }

+ Response 403 (application/json)

        {
            "result_code":1,
            "error_msg": "Refresh Error",
            "error_desc": "Token invalid, please login.",
            "error_info":  "http://docs.ngabarin.id/login"
        }

## Logout [/logout]

Dengan melakukan proses logout, server akan menandai berakhirnya sesi user dan token tidak dapat digunakan lagi hingga proses login ulang.

### Logout [GET /logout]

+ Request (application/json)
    Untuk menghapus akses token.

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Response 200 (application/json)

        {
            "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg",
            "token_expire": "2019-07-01T14:54:54-04:00",
            "token_expire_unix": 1562007294000,
            "status":"Blacklisted"
        }

+ Response 403 (application/json)

        {
            "result_code":1,
            "error_msg": "Refresh Error",
            "error_desc": "Token invalid, please login.",
            "error_info":  "http://docs.ngabarin.id/login"
        }

# Group Data Pengguna

## Mendapatkan Data Pengguna [/user]

### Mendapatkan Minimal Data [GET /user]

+ Request (application/json)

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Response 200 (application/json)

        {
            "id": 1,
            "username": "tegarimansyah",
            "name": "Tegar Imansyah"
        }

### Mendapatkan Data Tertentu [GET /user{?extends}]

+ Request (application/json)

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Parameters
    + extends: email,phone (optional) - List of extended information, separated by comma or comma URL encode `%2C`

+ Response 200 (application/json)

        {
            "id": 1,
            "username": "tegarimansyah",
            "name": "Tegar Imansyah",
            "email": "tegar@ngabarin.id",
            "phone":"08123456789"
        }


### Mendapatkan Semua Data Pengguna [GET /user{?extends}]

+ Request (application/json)
    Gunakan parameter `extends=all` untuk mendapat semua data

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Parameters
    + extends: all (optional) - List of extended information, separated by comma

+ Response 200 (application/json)

        {
            "id": 1,
            "username": "tegarimansyah",
            "name": "Tegar Imansyah",
            "email": "tegar@ngabarin.id",
            "phone":"08123456789",
            "address":"Sukolilo 19 Surabaya, Jawa Timur.",
            "projects": [
                { 
                  "name":"Hidroponik",
                  "slug": "hidroponik"
                },
                { 
                  "name":"Smart Home",
                  "slug": "smart-home"
                }
            ]
        }

### Update Data Pengguna [POST /user]

+ Request (application/json)
    Isi body yang mau di update sesuai dengan nama parameternya

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

    + Body

            {
                "phone":"0123456789"  
            }


+ Response 201 (application/json)

        {
            "response": "Data Updated",
            "data": {
                "phone":"0123456789"
            }
        }


## Project Pengguna [/projects]


### Mendapatkan Semua Project Pengguna [GET /user/projects]

+ Request (application/json)

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Response 200 (application/json)

        {
            "id": 1,
            "username": "tegarimansyah",
            "projects": [
                { 
                  "name":"Hidroponik",
                  "slug": "hidroponik"
                },
                { 
                  "name":"Smart Home",
                  "slug": "smart-home"
                }
            ]
        }


### Membuat Project Baru [PUT /user/projects]

+ Request (application/json)
    Membuat project baru

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

    + Body

            {
                "name":"Surabaya Sanitasi"  
            }


+ Response 201 (application/json)

        {
            "project": {
                "name":"Surabaya Sanitasi",
                "slug": "surabaya-sanitasi"
            },
            "response": "Project Created"
        }

# Group Data Project

## Mendapatkan Data Project [/project]

### Mendapatkan Minimal Data [GET /project/{nama_project}]

+ Request (application/json)

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Parameters
    + nama_project - Slug dari project. Slug dapat dilihat pada API `/user/projects`.


+ Response 200 (application/json)

        {
            "id": 1,
            "name": "Nama Project",
            "username": "nama_project",
            "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg"
        }

### Mendapatkan Data Tertentu [GET /project/{nama_project}{?extends}]

+ Request (application/json)

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Parameters
    + nama_project - Slug dari project. Slug dapat dilihat pada API `/user/projects`.
    + extends: address (optional) - List of extended information, separated by comma or comma URL encode `%2C`

+ Response 200 (application/json)

        {
            "id": 1,
            "name": "Nama Project",
            "username": "nama_project",
            "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg",
            "address": "Jl. Keputih, Surabaya Jawa Timur"
        }

### Mendapatkan Semua Data Project [GET /project/{nama_project}{?extends}]

+ Request (application/json)

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

+ Parameters
    + nama_project - Slug dari project. Slug dapat dilihat pada API `/user/projects`.
    + extends: address (optional) - List of extended information, separated by comma or comma URL encode `%2C`

+ Response 200 (application/json)

        {
            "id": 1,
            "name": "Nama Project",
            "username": "nama_project",
            "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg",
            "address": "Jl. Keputih, Surabaya Jawa Timur"
        }

### Melakukan Update Data Project [POST /project/{nama_project}]

+ Request (application/json)

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

    + Body
            {
                "name":"Surabaya Project"
            }

+ Parameters
    + nama_project - Slug dari project. Slug dapat dilihat pada API `/user/projects`.

+ Response 201 (application/json)

        {
            "response": "Data Updated",
            "data": {
                "name":"Surabaya Project"
            }
        }

### Membuat Rekam Data Sensor Baru [PUT /project/{nama_project}/new_data]

+ Request (application/json)
    Membuat project baru

    + Header

                NGABARIN-TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MzcyODQ3NTgsImlhdCI6MTUzNzE5ODMzOCwic3ViIjoxfQ.PgUyBkJhoOmTBny2aetjzpS-R2NS_H1E1KcC90iyaXg

    + Body

            {
                "gateway":"Sukolilo",
                "device":"sensor1",
                "loc":"-7.4564989,112.6766626",
                "data": [
                    {
                        "name":"Sensor Panas",
                        "value":"20"
                    },
                    {
                        "name":"Sensor PH",
                        "value":"5.3"
                    }
                ]
            }

+ Response 201 (application/json)

        {
            "response": "Data Recorded",
            "new_record": {
                "gateway":"Sukolilo",
                "gateway_id":3,
                "device":"sensor1",
                "device_id":2,
                "loc":"-7.4564989,112.6766626",
                "data": [
                    {
                        "id":744,
                        "name":"Sensor Panas",
                        "value":"20"
                    },
                    {
                        "id":745,
                        "name":"Sensor PH",
                        "value":"5.3"
                    }
                ]
            }
        }

# Group Data Sensor dan Aktuator

## Mendapatkan Data Sensor [/sensor]

### Mendapatkan Data Terbaru Semua Sensor [GET /project/{nama_project}/sensor]

+ Response 200 (application/json)

        {
            "response": "OK"
        }

### Mendapatkan Data Dalam Range Waktu Semua Sensor [GET /project/{nama_project}/sensor?from=&until=]

+ Response 200 (application/json)

        {
            "response": "OK"
        }

### Mendapatkan Data Terbaru Spesifik Sensor [GET /project/{nama_project}/sensor/{nama_sensor}]

+ Response 200 (application/json)

        {
            "response": "OK"
        }

### Mendapatkan Data Dalam Range Waktu Spesifik Sensor [GET /project/{nama_project}/sensor/{nama_sensor}?from=&until=]

+ Response 200 (application/json)

        {
            "response": "OK"
        }

## Mengatur Data Aktuator [/aktuator]

### Mendapatkan Data Terbaru Semua Aktuator [GET /project/{nama_project}/actuator]

+ Response 200 (application/json)

        {
            "response": "OK"
        }

### Mendapatkan Data Dalam Range Waktu Semua Aktuator [GET /project/{nama_project}/actuator?from=&until=]

+ Response 200 (application/json)

        {
            "response": "OK"
        }

### Mendapatkan Data Terbaru Spesifik Aktuator [GET /project/{nama_project}/actuator/{nama_aktuator}]

+ Response 200 (application/json)

        {
            "response": "OK"
        }

### Mendapatkan Data Dalam Range Waktu Spesifik Aktuator [GET /project/{nama_project}/actuator/{nama_aktuator}?from=&until=]

+ Response 200 (application/json)

        {
            "response": "OK"
        }

### Mengubah Data Spesifik Aktuator [PUT /project/{nama_project}/actuator]

+ Response 200 (application/json)

        {
            "response": "OK"
        }